// ---------------------------------------------------------------- //
// This file is autogenerated by pioasm version 2.2.0; do not edit! //
// ---------------------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------------- //
// BLAST_CAPTURE //
// ------------- //

#define BLAST_CAPTURE_wrap_target 1
#define BLAST_CAPTURE_wrap 1
#define BLAST_CAPTURE_pio_version 1

static const uint16_t BLAST_CAPTURE_program_instructions[] = {
    0x00c0, //  0: jmp    pin, 0
            //     .wrap_target
    0x4000, //  1: in     pins, 32
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program BLAST_CAPTURE_program = {
    .instructions = BLAST_CAPTURE_program_instructions,
    .length = 2,
    .origin = -1,
    .pio_version = BLAST_CAPTURE_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config BLAST_CAPTURE_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + BLAST_CAPTURE_wrap_target, offset + BLAST_CAPTURE_wrap);
    return c;
}
#endif

// ---------------- //
// POSITIVE_CAPTURE //
// ---------------- //

#define POSITIVE_CAPTURE_wrap_target 4
#define POSITIVE_CAPTURE_wrap 5
#define POSITIVE_CAPTURE_pio_version 1

static const uint16_t POSITIVE_CAPTURE_program_instructions[] = {
    0x80a0, //  0: pull   block
    0x6040, //  1: out    y, 32
    0x80a0, //  2: pull   block
    0xa027, //  3: mov    x, osr
            //     .wrap_target
    0x4000, //  4: in     pins, 32
    0x00c6, //  5: jmp    pin, 6
            //     .wrap
    0x4000, //  6: in     pins, 32
    0x0046, //  7: jmp    x--, 6
    0x008b, //  8: jmp    y--, 11
    0xc000, //  9: irq    nowait 0
    0x000a, // 10: jmp    10
    0xa027, // 11: mov    x, osr
    0x00c6, // 12: jmp    pin, 6
    0x000c, // 13: jmp    12
};

#if !PICO_NO_HARDWARE
static const struct pio_program POSITIVE_CAPTURE_program = {
    .instructions = POSITIVE_CAPTURE_program_instructions,
    .length = 14,
    .origin = -1,
    .pio_version = POSITIVE_CAPTURE_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config POSITIVE_CAPTURE_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + POSITIVE_CAPTURE_wrap_target, offset + POSITIVE_CAPTURE_wrap);
    return c;
}
#endif

// ---------------- //
// NEGATIVE_CAPTURE //
// ---------------- //

#define NEGATIVE_CAPTURE_wrap_target 6
#define NEGATIVE_CAPTURE_wrap 12
#define NEGATIVE_CAPTURE_pio_version 1

static const uint16_t NEGATIVE_CAPTURE_program_instructions[] = {
    0x80a0, //  0: pull   block
    0x6040, //  1: out    y, 32
    0x80a0, //  2: pull   block
    0xa027, //  3: mov    x, osr
    0x4000, //  4: in     pins, 32
    0x00c4, //  5: jmp    pin, 4
            //     .wrap_target
    0x4000, //  6: in     pins, 32
    0x0046, //  7: jmp    x--, 6
    0x008b, //  8: jmp    y--, 11
    0xc000, //  9: irq    nowait 0
    0x000a, // 10: jmp    10
    0xa027, // 11: mov    x, osr
    0x00cc, // 12: jmp    pin, 12
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program NEGATIVE_CAPTURE_program = {
    .instructions = NEGATIVE_CAPTURE_program_instructions,
    .length = 13,
    .origin = -1,
    .pio_version = NEGATIVE_CAPTURE_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config NEGATIVE_CAPTURE_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + NEGATIVE_CAPTURE_wrap_target, offset + NEGATIVE_CAPTURE_wrap);
    return c;
}
#endif

// ------------------------------ //
// POSITIVE_CAPTURE_MEASUREBURSTS //
// ------------------------------ //

#define POSITIVE_CAPTURE_MEASUREBURSTS_wrap_target 5
#define POSITIVE_CAPTURE_MEASUREBURSTS_wrap 6
#define POSITIVE_CAPTURE_MEASUREBURSTS_pio_version 1

static const uint16_t POSITIVE_CAPTURE_MEASUREBURSTS_program_instructions[] = {
    0x80a0, //  0: pull   block
    0x6040, //  1: out    y, 32
    0x80a0, //  2: pull   block
    0xa027, //  3: mov    x, osr
    0xc021, //  4: irq    wait 1
            //     .wrap_target
    0x4000, //  5: in     pins, 32
    0x00c7, //  6: jmp    pin, 7
            //     .wrap
    0x4000, //  7: in     pins, 32
    0x0047, //  8: jmp    x--, 7
    0x008d, //  9: jmp    y--, 13
    0xc001, // 10: irq    nowait 1
    0xc000, // 11: irq    nowait 0
    0x000c, // 12: jmp    12
    0xc001, // 13: irq    nowait 1
    0xa027, // 14: mov    x, osr
    0x00c7, // 15: jmp    pin, 7
    0x000f, // 16: jmp    15
};

#if !PICO_NO_HARDWARE
static const struct pio_program POSITIVE_CAPTURE_MEASUREBURSTS_program = {
    .instructions = POSITIVE_CAPTURE_MEASUREBURSTS_program_instructions,
    .length = 17,
    .origin = -1,
    .pio_version = POSITIVE_CAPTURE_MEASUREBURSTS_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config POSITIVE_CAPTURE_MEASUREBURSTS_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + POSITIVE_CAPTURE_MEASUREBURSTS_wrap_target, offset + POSITIVE_CAPTURE_MEASUREBURSTS_wrap);
    return c;
}
#endif

// ------------------------------ //
// NEGATIVE_CAPTURE_MEASUREBURSTS //
// ------------------------------ //

#define NEGATIVE_CAPTURE_MEASUREBURSTS_wrap_target 7
#define NEGATIVE_CAPTURE_MEASUREBURSTS_wrap 15
#define NEGATIVE_CAPTURE_MEASUREBURSTS_pio_version 1

static const uint16_t NEGATIVE_CAPTURE_MEASUREBURSTS_program_instructions[] = {
    0x80a0, //  0: pull   block
    0x6040, //  1: out    y, 32
    0x80a0, //  2: pull   block
    0xa027, //  3: mov    x, osr
    0xc021, //  4: irq    wait 1
    0x4000, //  5: in     pins, 32
    0x00c5, //  6: jmp    pin, 5
            //     .wrap_target
    0x4000, //  7: in     pins, 32
    0x0047, //  8: jmp    x--, 7
    0x008d, //  9: jmp    y--, 13
    0xc001, // 10: irq    nowait 1
    0xc000, // 11: irq    nowait 0
    0x000c, // 12: jmp    12
    0xc001, // 13: irq    nowait 1
    0xa027, // 14: mov    x, osr
    0x00cf, // 15: jmp    pin, 15
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program NEGATIVE_CAPTURE_MEASUREBURSTS_program = {
    .instructions = NEGATIVE_CAPTURE_MEASUREBURSTS_program_instructions,
    .length = 16,
    .origin = -1,
    .pio_version = NEGATIVE_CAPTURE_MEASUREBURSTS_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config NEGATIVE_CAPTURE_MEASUREBURSTS_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + NEGATIVE_CAPTURE_MEASUREBURSTS_wrap_target, offset + NEGATIVE_CAPTURE_MEASUREBURSTS_wrap);
    return c;
}
#endif

// --------------- //
// COMPLEX_CAPTURE //
// --------------- //

#define COMPLEX_CAPTURE_wrap_target 3
#define COMPLEX_CAPTURE_wrap 4
#define COMPLEX_CAPTURE_pio_version 1

static const uint16_t COMPLEX_CAPTURE_program_instructions[] = {
    0x80a0, //  0: pull   block
    0x6020, //  1: out    x, 32
    0x20c7, //  2: wait   1 irq, 7
            //     .wrap_target
    0x401d, //  3: in     pins, 29
    0x00c5, //  4: jmp    pin, 5
            //     .wrap
    0x401d, //  5: in     pins, 29
    0x0045, //  6: jmp    x--, 5
    0xc000, //  7: irq    nowait 0
    0x0008, //  8: jmp    8
};

#if !PICO_NO_HARDWARE
static const struct pio_program COMPLEX_CAPTURE_program = {
    .instructions = COMPLEX_CAPTURE_program_instructions,
    .length = 9,
    .origin = -1,
    .pio_version = COMPLEX_CAPTURE_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config COMPLEX_CAPTURE_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + COMPLEX_CAPTURE_wrap_target, offset + COMPLEX_CAPTURE_wrap);
    return c;
}
#endif

// ------------ //
// FAST_CAPTURE //
// ------------ //

#define FAST_CAPTURE_wrap_target 2
#define FAST_CAPTURE_wrap 3
#define FAST_CAPTURE_pio_version 1

static const uint16_t FAST_CAPTURE_program_instructions[] = {
    0x80a0, //  0: pull   block
    0x6020, //  1: out    x, 32
            //     .wrap_target
    0x401d, //  2: in     pins, 29
    0x00c4, //  3: jmp    pin, 4
            //     .wrap
    0x401d, //  4: in     pins, 29
    0x0044, //  5: jmp    x--, 4
    0xc000, //  6: irq    nowait 0
    0x0007, //  7: jmp    7
};

#if !PICO_NO_HARDWARE
static const struct pio_program FAST_CAPTURE_program = {
    .instructions = FAST_CAPTURE_program_instructions,
    .length = 8,
    .origin = -1,
    .pio_version = FAST_CAPTURE_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config FAST_CAPTURE_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + FAST_CAPTURE_wrap_target, offset + FAST_CAPTURE_wrap);
    return c;
}
#endif

